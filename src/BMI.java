
import java.awt.Color;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author raghavsharma
 */
public class BMI extends javax.swing.JFrame {

    /**
     * Creates new form BMI
     */
    public BMI() {
        initComponents();
        
        
        getContentPane().setBackground(Color.YELLOW);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitle = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lblgender = new javax.swing.JLabel();
        lblunits = new javax.swing.JLabel();
        rbtnmale = new javax.swing.JRadioButton();
        rbtnfemale = new javax.swing.JRadioButton();
        rbtnmetric = new javax.swing.JRadioButton();
        rbtnimperial = new javax.swing.JRadioButton();
        lblweight = new javax.swing.JLabel();
        txtweight = new javax.swing.JTextField();
        txtheight = new javax.swing.JTextField();
        lblheight = new javax.swing.JLabel();
        btnreset = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnenter = new javax.swing.JButton();
        lblage = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbltitle.setFont(new java.awt.Font("Phosphate", 0, 36)); // NOI18N
        lbltitle.setText("BMI Calculator");

        lblname.setText("Name:");

        lblgender.setText("Gender:");

        lblunits.setText("Units:");
        lblunits.setToolTipText("");

        rbtnmale.setText("Male");
        rbtnmale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnmaleActionPerformed(evt);
            }
        });

        rbtnfemale.setText("Female");
        rbtnfemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnfemaleActionPerformed(evt);
            }
        });

        rbtnmetric.setText("Metric");
        rbtnmetric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnmetricActionPerformed(evt);
            }
        });

        rbtnimperial.setText("Imperial");
        rbtnimperial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnimperialActionPerformed(evt);
            }
        });

        lblweight.setText("Weight (lb, kg)");

        lblheight.setText("Height (Inches/Metres)");

        btnreset.setText("Reset");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        btnenter.setText("Enter");
        btnenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenterActionPerformed(evt);
            }
        });

        lblage.setText("Age");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbltitle)
                .addGap(110, 110, 110))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(rbtnmale)
                                        .addGap(27, 27, 27))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblunits)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtnmetric)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnimperial)
                                    .addComponent(rbtnfemale)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblgender)
                                    .addComponent(lblname))
                                .addGap(18, 18, 18)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblage)
                            .addComponent(lblheight)
                            .addComponent(lblweight))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtweight, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtheight, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnexit)
                    .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnenter, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbltitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblname)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblgender)
                    .addComponent(rbtnmale)
                    .addComponent(rbtnfemale)
                    .addComponent(btnenter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblunits)
                    .addComponent(rbtnmetric)
                    .addComponent(rbtnimperial))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtweight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblweight)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblheight)
                            .addComponent(txtheight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblage, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenterActionPerformed
        // TODO add your handling code here:
        if (rbtnmale.isSelected() == false && rbtnfemale.isSelected() == false
           || rbtnmetric.isSelected() == false && rbtnimperial.isSelected() == false
           || txtage.getText().trim().isEmpty()
           || txtheight.getText().trim().isEmpty()
           || txtweight.getText().trim().isEmpty()
           ||  txtname.getText().trim().isEmpty())
   {
       JOptionPane.showMessageDialog(null, "Please fill in all of the criteria before sumbitting");
   }
        
        int age;
        age = Integer.parseInt(txtage.getText());
        
        if (age < 20)
{
JOptionPane.showMessageDialog(null, "Your age must be 20 or higher to be applicable");
 }
        
   else 
   {
       
       
 

 double height, weight;
 double bmi;
 double weight2;
 double total;
 String name;

 height = Double.parseDouble(txtheight.getText());
 weight = Double.parseDouble(txtweight.getText());
 
 name = txtname.getText();
 



if (rbtnmale.isSelected())
{
 if (rbtnmetric.isSelected())
{

 bmi = weight/(Math.pow(height, 2));




 JOptionPane.showMessageDialog(null, name+ "'s bmi is " + String.format("%.1f", bmi));


 if ((age >=20) && (age<=29))
{
if (bmi > 25.5)
{
weight2 = 25.5*(Math.pow(height, 2));
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentile\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }

else if (bmi < 25.5)
 {
weight2 = 25.5*(Math.pow(height, 2));
total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total)+ "kg to match your ideal BMI");
}

}
if ((age>=30) && (age<=39))
 {
if (bmi > 27.5)
 {

 weight2 = 27.5*(Math.pow(height, 2));
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Perentilte\n Your Weight should decrease by " + String.format("%.1f", total)+ "kg to match your ideal BMI");

 }
 else if (bmi < 27.5)
 {
 weight2 = 27.5*(Math.pow(height, 2));
 total = weight2 - weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Perentitle\n Your Weight should increase by " + String.format("%.1f", total)+ "kg to match your ideal BMI");
 }
}
  if ((age>=40) && (age <= 49))
{
 if (bmi >28.5)
{

 weight2 = 28.5*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name +" is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total)+ "kg to match your ideal BMI");
 }
 if (bmi<28.5)
 {
 weight2 = 28.5*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by" + String.format("%.1f", total)+"kg to macth your ideal  BMI");
}
} 
if ((age>=50) && (age<=59))
{
if (bmi >28.3)
{

weight2 = 28.3*(Math.pow(height, 2));
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by "+String.format("%.1f", total)+"kg to match your ideal BMI");
}
else if (bmi < 28.3)
{

weight2 = 28.3*(Math.pow(height, 2));
total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by "+ String.format("%.1f", total) + "kg to match your ideal BMI");
}
}
 
  if ((age>=60) && (age<=69))
{
 if (bmi > 28.0)
 {
 weight2 = 28*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
 else if (bmi < 28.0)
 {
 weight2 = 28*(Math.pow(height, 2));
 total = weight2-weight;

 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
}
 if ((age >= 70) && (age<=79))
{
 if (bmi > 27.8)
 {
 weight2 = 27.8*(Math.pow(height, 2));
 total = weight - weight2;

 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
 else if (bmi < 27.8)
 {
 weight2 = 27.8*(Math.pow(height, 2));
 total = weight2-weight;

 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
 }
  if (age >= 80)
{
if (bmi > 26.3)
{
 weight2 = 26.3*(Math.pow(height, 2));
 total = weight-weight2;

 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
else if (bmi < 26.3)
{
 weight2 = 26.3*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
}
 
 
 
 
}   
}
 
 if (rbtnmale.isSelected())
{
if(rbtnimperial.isSelected())
{
bmi = (weight/Math.pow(height, 2))*703;
 JOptionPane.showMessageDialog(null, name + "'s bmi is " + String.format("%.1f", bmi));
 if (age < 20)
{
 JOptionPane.showMessageDialog(null, "Your age must be 20 or higher to be applicable");
 }
if ((age >=20) && (age<=29))
 {
if (bmi > 25.5)
 {
weight2 = (25.5/703)*Math.pow(height, 2);
total = weight-weight2;

 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentile\n Your Weight should decrease by " + String.format("%.1f", total) + "pound to match your ideal BMI");
  }
else if (bmi < 25.5)
 {
 weight2 = (25.5/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + "  is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }

}
 if ((age>=30) && (age<=39))
 {
if (bmi > 27.5)
 {
 weight2 = (27.5/703)*Math.pow(height, 2);
total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Perentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 else if (bmi < 27.5)
 {
 weight2 = (27.5/703)*Math.pow(height, 2);
 total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Perentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 }
if ((age>=40) && (age <= 49))
 {
 if (bmi >28.5)
 {
 weight2 = (28.5/703)*Math.pow(height, 2);
total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 if (bmi<28.5)
 {
 weight2 = (28.5/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
 }
  
 if ((age>=50) && (age<=59))
{
if (bmi >28.3)
{
weight2 = (28.3/703)*Math.pow(height, 2);
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
else if (bmi < 28.3)
{
weight2 = (28.3/703)*Math.pow(height, 2);
total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
}
if ((age>=60) && (age<=69))
{
 if (bmi > 28.0)
 {
 weight2 = (28.0/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 else if (bmi < 28.0)
 {
weight2 = (28.0/703)*Math.pow(height, 2);
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
}
if ((age >= 70) && (age<=79))
{
 if (bmi > 27.8)
{
 weight2 = (27.8/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
else if (bmi < 27.8)
 {
 weight2 = (27.8/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
 }

 if (age >= 80)
{
 if (bmi > 26.3)
{
 weight2 = (26.3/703)*Math.pow(height, 2);
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 else if (bmi < 26.3)
 {
 weight2 = (26.3/703)*Math.pow(height, 2);
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
}

}
}

if (rbtnfemale.isSelected())
{
if (rbtnmetric.isSelected())
{

 bmi = weight/(Math.pow(height, 2));

 JOptionPane.showMessageDialog(null, name + "'s bmi is " + String.format("%.1f", bmi));


 if (age < 20)
 {
 JOptionPane.showMessageDialog(null, "Your age must be 20 or higher to be applicable");
 }
 if ((age >=20) && (age<=29))
{
 if (bmi > 25.6)
{
 weight2 = 25.6*(Math.pow(height, 2));
total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentile\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
 else if (bmi < 25.6)
 {
 weight2 = 25.6*(Math.pow(height, 2));
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}

}
if ((age>=30) && (age<=39))
{
 if (bmi > 27.6)
{
 weight2 = 27.6*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Perentilte\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
 else if (bmi < 27.6)
 {
weight2 = 27.6*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Perentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
}
 if ((age>=40) && (age <=49))
 {
 if (bmi >28.1)
 {
 weight2 = 28.1*(Math.pow(height, 2));
total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
else if (bmi<28.1)
 {
 weight2 = 28.1*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
 }
  if ((age>=50) && (age<=59))
 {
if (bmi >28.6)
{
weight2 = 28.6*(Math.pow(height, 2));
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
else if (bmi < 28.6)
{
 weight2 = 28.6*(Math.pow(height, 2));
 total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match you ideal BMI");
}
}
 if ((age>=60) && (age<=69))
{
if (bmi > 28.9)
 {
 weight2 = 28.9*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
 else if (bmi < 28.9)
{
 weight2 = 28.9*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
 }
  if ((age >= 70) && (age<=79))
 {
if (bmi > 28.3)
 {
 weight2 = 28.3*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\nYour Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
}
 else if (bmi < 28.3)
 {
 weight2 = 28.3*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI" );
}
}
 if (age >= 80)
{
 if (bmi > 26.1)
{
 weight2 = 26.1*(Math.pow(height, 2));
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
 else if (bmi < 26.1)
 {
 weight2 = 26.1*(Math.pow(height, 2));
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "kg to match your ideal BMI");
 }
}

}

  } 
if (rbtnfemale.isSelected())
{
if (rbtnimperial.isSelected())
{
bmi = (weight/Math.pow(height, 2))*703;

JOptionPane.showMessageDialog(null, name + "'s bmi is " + String.format("%.1f", bmi));

 if (age < 20)
 {
 JOptionPane.showMessageDialog(null, "Your age must be 20 or higher to be applicable");
 }
 if ((age >=20) && (age<=29))
 {
 if (bmi > 25.6)
 {
 weight2 = (25.6/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentile\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 else if (bmi < 25.6)
{
weight2 = (25.6/703)*Math.pow(height, 2);
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }

}
if ((age>=30) && (age<=39))

 {
 if (bmi > 27.6)
 {
 weight2 = (27.6/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Perentilte\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 else if (bmi < 27.6)
 {
 weight2 = (27.6/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Perentitle \n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 }
 if ((age>=40) && (age <= 49))
{
 if (bmi >28.1)
 {
 weight2 = (28.1/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
 if (bmi<28.1)
 {
 weight2 = (28.1/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
}
 if ((age>=50) && (age<=59))
{
if (bmi >28.6)
{
weight2 = (28.6/703)*Math.pow(height, 2);
total = weight-weight2;
JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match you ideal BMI");

}
else if (bmi < 28.6)
{
 weight2 = (28.6/703)*Math.pow(height, 2);
 total = weight2-weight;
JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
 }
 if ((age>=60) && (age<=69))
 {
 if (bmi > 28.9)
 {
 weight2 = (28.9/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
else if (bmi < 28.9)
{
weight2 = (28.9/703)*Math.pow(height, 2);
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
}
 if ((age >=70) && (age<=79))
{
 if (bmi > 28.3)
 {
 weight2 = (28.3/703)*Math.pow(height, 2);
 total = weight-weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
 else if (bmi < 28.3)
 {
 weight2 = (28.3/703)*Math.pow(height, 2);
 total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentitle\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
}
 if (age >= 80)
 {
 if (bmi > 26.1)
 {
 weight2 = (26.1/703)*Math.pow(height, 2);
 total = weight -weight2;
 JOptionPane.showMessageDialog(null, name + " is above the 50th Percentitle\n Your Weight should decrease by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
 }
else if (bmi < 26.1)
 {
 weight2 = (26.1/703)*Math.pow(height, 2);
total = weight2-weight;
 JOptionPane.showMessageDialog(null, name + " is below the 50th Percentile\n Your Weight should increase by " + String.format("%.1f", total) + "pounds to match your ideal BMI");
}
}
 
 
 
}

}
   }
        
        
        
        
    }//GEN-LAST:event_btnenterActionPerformed

    private void rbtnmaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnmaleActionPerformed
        // TODO add your handling code here:
        
         if (rbtnmale.isSelected())
        {
            rbtnfemale.setSelected(false);
        }
    }//GEN-LAST:event_rbtnmaleActionPerformed

    private void rbtnfemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnfemaleActionPerformed
        // TODO add your handling code here:
        
        if (rbtnfemale.isSelected())
        {
            rbtnmale.setSelected(false);
        }
    }//GEN-LAST:event_rbtnfemaleActionPerformed

    private void rbtnmetricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnmetricActionPerformed
        // TODO add your handling code here:
         if (rbtnmetric.isSelected())
        {
            rbtnimperial.setSelected(false);
        }
        
    }//GEN-LAST:event_rbtnmetricActionPerformed

    private void rbtnimperialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnimperialActionPerformed
        // TODO add your handling code here:
        if (rbtnimperial.isSelected())
        {
            rbtnmetric.setSelected(false);
        }
        
    }//GEN-LAST:event_rbtnimperialActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        // TODO add your handling code here:
        rbtnmale.setSelected(false);
        rbtnfemale.setSelected(false);
        rbtnmetric.setSelected(false);
        rbtnimperial.setSelected(false);
        txtheight.setText("");
        txtweight.setText("");
        txtname.setText("");
        txtage.setText("");
        
    }//GEN-LAST:event_btnresetActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        
        
    }//GEN-LAST:event_btnexitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnenter;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnreset;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblgender;
    private javax.swing.JLabel lblheight;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lblunits;
    private javax.swing.JLabel lblweight;
    private javax.swing.JRadioButton rbtnfemale;
    private javax.swing.JRadioButton rbtnimperial;
    private javax.swing.JRadioButton rbtnmale;
    private javax.swing.JRadioButton rbtnmetric;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtheight;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtweight;
    // End of variables declaration//GEN-END:variables
}
